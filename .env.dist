# Project's path (absolute or relative)
PROJECT_PATH=./project/
PROJECT_DOMAIN=app.lo

# Security
SSH_KEY_DIR=~/.ssh

# Composer
COMPOSER_CACHE_DIR=~/.composer

# MySQL
MYSQL_ROOT_PASSWORD=root
MYSQL_DATABASE=mydb
MYSQL_USER=user
MYSQL_PASSWORD=userpass

# PHP settings
PHP_TIMEZONE=Europe/Vienna
PHP_MEMORY_LIMIT=512M

# Open Ports
PORT_MYSQL=13306
PORT_NGINX=10080
PORT_KIBANA=15601

# Blackfire:
BLACKFIRE_SERVER_ID=
BLACKFIRE_SERVER_TOKEN=
BLACKFIRE_CLIENT_ID=
BLACKFIRE_CLIENT_TOKEN=

# Xdebug
XDEBUG_CONFIG=1
XDEBUG_REMOTE_ENABLE=1
XDEBUG_REMOTE_AUTOSTART=1
XDEBUG_REMOTE_PORT=9000

# Linux users, uncomment:
# XDEBUG_REMOTE_CONNECT_BACK=1
# If you want to XDEBUG from CLI, don't use XDEBUG_REMOTE_CONNECT_BACK: 
# Enter the IP adress of your Docker bridge, to get this address: 
# $ ip -f inet addr show docker0 | grep -Po 'inet \K[\d.]+'
# XDEBUG_REMOTE_HOST=

# macOS uncomment (Docker for Mac CE version >= 17.06.0):
# XDEBUG_REMOTE_HOST=docker.for.mac.localhost
# macOS uncomment (Docker for Mac CE version >= 17.12.0):
# XDEBUG_REMOTE_HOST=docker.for.mac.host.internal

# Windows uncomment (Docker for Windows CE >= 17.06.0):
# XDEBUG_REMOTE_HOST=docker.for.win.localhost

# If you're running an older version of Docker you can use this:
# Support for this is deprecated!
# For Docker for macOS or Windows, you need to provide your IP address.
# For macOS, you can create an alias of your loopback (127.0.0.1) address
# with the following command:
#
# sudo ifconfig lo0 alias 10.254.254.254 255.255.255.0
#
# If you are running Linux and sharing your .env with mixed-OS team members,
# you can also create a URL alias using the following:
#
# sudo ip -4 addr add 10.254.254.254/32 dev lo
# XDEBUG_REMOTE_HOST=10.254.254.254

# Pipe XDebug logs to STDOUT? You only need to do this if Xdebug isn't working.
# XDEBUG_CONFIG=remote_log=/dev/stdout

# Xdebug IDE configuration.
PHP_IDE_CONFIG=serverName=sulu-docker
